<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gqzdev.learn.dao.TaskQuestionMapper">
	<resultMap id="BaseResultMap" type="com.gqzdev.learn.model.TaskQuestion">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="item_a" property="itemA" jdbcType="VARCHAR" />
		<result column="item_b" property="itemB" jdbcType="VARCHAR" />
		<result column="item_c" property="itemC" jdbcType="VARCHAR" />
		<result column="item_d" property="itemD" jdbcType="VARCHAR" />
		<result column="answer" property="answer" jdbcType="VARCHAR" />
		<result column="task_id" property="taskId" jdbcType="INTEGER" />
		<result column="score" property="score" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="isDel" property="isdel" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, title, item_a, item_b, item_c, item_d, answer, task_id, score, state,
		isDel
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.gqzdev.learn.model.TaskQuestionExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from task_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from task_question
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from task_question
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.gqzdev.learn.model.TaskQuestionExample">
		delete from task_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.gqzdev.learn.model.TaskQuestion">
		insert into task_question (id, title, item_a,
		item_b, item_c, item_d,
		answer, task_id, score,
		state, isDel)
		values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{itemA,jdbcType=VARCHAR},
		#{itemB,jdbcType=VARCHAR}, #{itemC,jdbcType=VARCHAR}, #{itemD,jdbcType=VARCHAR},
		#{answer,jdbcType=VARCHAR}, #{taskId,jdbcType=INTEGER},
		#{score,jdbcType=INTEGER},
		#{state,jdbcType=VARCHAR}, #{isdel,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.gqzdev.learn.model.TaskQuestion">
		insert into task_question
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="itemA != null">
				item_a,
			</if>
			<if test="itemB != null">
				item_b,
			</if>
			<if test="itemC != null">
				item_c,
			</if>
			<if test="itemD != null">
				item_d,
			</if>
			<if test="answer != null">
				answer,
			</if>
			<if test="taskId != null">
				task_id,
			</if>
			<if test="score != null">
				score,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="isdel != null">
				isDel,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="itemA != null">
				#{itemA,jdbcType=VARCHAR},
			</if>
			<if test="itemB != null">
				#{itemB,jdbcType=VARCHAR},
			</if>
			<if test="itemC != null">
				#{itemC,jdbcType=VARCHAR},
			</if>
			<if test="itemD != null">
				#{itemD,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				#{answer,jdbcType=VARCHAR},
			</if>
			<if test="taskId != null">
				#{taskId,jdbcType=INTEGER},
			</if>
			<if test="score != null">
				#{score,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="isdel != null">
				#{isdel,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.gqzdev.learn.model.TaskQuestionExample"
		resultType="java.lang.Integer">
		select count(*) from task_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update task_question
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.itemA != null">
				item_a = #{record.itemA,jdbcType=VARCHAR},
			</if>
			<if test="record.itemB != null">
				item_b = #{record.itemB,jdbcType=VARCHAR},
			</if>
			<if test="record.itemC != null">
				item_c = #{record.itemC,jdbcType=VARCHAR},
			</if>
			<if test="record.itemD != null">
				item_d = #{record.itemD,jdbcType=VARCHAR},
			</if>
			<if test="record.answer != null">
				answer = #{record.answer,jdbcType=VARCHAR},
			</if>
			<if test="record.taskId != null">
				task_id = #{record.taskId,jdbcType=INTEGER},
			</if>
			<if test="record.score != null">
				score = #{record.score,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=VARCHAR},
			</if>
			<if test="record.isdel != null">
				isDel = #{record.isdel,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update task_question
		set id = #{record.id,jdbcType=INTEGER},
		title = #{record.title,jdbcType=VARCHAR},
		item_a = #{record.itemA,jdbcType=VARCHAR},
		item_b = #{record.itemB,jdbcType=VARCHAR},
		item_c = #{record.itemC,jdbcType=VARCHAR},
		item_d = #{record.itemD,jdbcType=VARCHAR},
		answer = #{record.answer,jdbcType=VARCHAR},
		task_id = #{record.taskId,jdbcType=INTEGER},
		score = #{record.score,jdbcType=INTEGER},
		state = #{record.state,jdbcType=VARCHAR},
		isDel = #{record.isdel,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.gqzdev.learn.model.TaskQuestion">
		update task_question
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="itemA != null">
				item_a = #{itemA,jdbcType=VARCHAR},
			</if>
			<if test="itemB != null">
				item_b = #{itemB,jdbcType=VARCHAR},
			</if>
			<if test="itemC != null">
				item_c = #{itemC,jdbcType=VARCHAR},
			</if>
			<if test="itemD != null">
				item_d = #{itemD,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				answer = #{answer,jdbcType=VARCHAR},
			</if>
			<if test="taskId != null">
				task_id = #{taskId,jdbcType=INTEGER},
			</if>
			<if test="score != null">
				score = #{score,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="isdel != null">
				isDel = #{isdel,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gqzdev.learn.model.TaskQuestion">
		update task_question
		set title = #{title,jdbcType=VARCHAR},
		item_a = #{itemA,jdbcType=VARCHAR},
		item_b = #{itemB,jdbcType=VARCHAR},
		item_c = #{itemC,jdbcType=VARCHAR},
		item_d = #{itemD,jdbcType=VARCHAR},
		answer = #{answer,jdbcType=VARCHAR},
		task_id = #{taskId,jdbcType=INTEGER},
		score = #{score,jdbcType=INTEGER},
		state = #{state,jdbcType=VARCHAR},
		isDel = #{isdel,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 自定义 -->
	<insert id="saveEntity" parameterType="com.gqzdev.learn.model.TaskQuestion">
		INSERT into task_question (title, item_a, item_b, item_c, item_d, answer,
		task_id, score) VALUES (#{title}, #{itemA}, #{itemB}, #{itemC},
		#{itemD}, #{answer}, #{taskId}, #{score})
	</insert>

	<select id="searchEntity" resultMap="BaseResultMap">
		SELECT * FROM task_question WHERE task_id = #{taskId}
	</select>

	<select id="getEntityById" parameterType="int" resultMap="BaseResultMap">
		SELECT * FROM task_question WHERE id = #{id}
	</select>

	<delete id="deleteEntity" parameterType="int">
		DELETE FROM task_question WHERE id = #{id}
	</delete>

	<delete id="updateEntity" parameterType="com.gqzdev.learn.model.TaskQuestion">
		UPDATE task_question SET title = #{title}, item_a = #{itemA}, item_b =
		#{itemB}, item_c = #{itemC}, item_d = #{itemD}, answer = #{answer},
		task_id = #{taskId}, score = #{score} WHERE id = #{id}
	</delete>
</mapper>